/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useLayoutEffect, useRef } from 'react'
import { Reflector, useGLTF, useTexture } from '@react-three/drei'
import { GLTF, GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import * as THREE from 'three'
import { Stage } from '../Stage'


const MODEL_PATH = '/cybertruck.gltf'

useGLTF.preload(MODEL_PATH)

type GLTFResult = GLTF & {
  scene: any
  nodes: any
  materials: any
}

export default function Model(props: any) {
  const group = useRef()
  const { scene, nodes, materials } = useGLTF(MODEL_PATH) as unknown as GLTFResult
  console.log("ðŸš€ ~ file: index.tsx ~ line 25 ~ Model ~ scene", scene)

  return (
    <>
      <Stage />
      <group ref={group} {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.body.geometry}
        material={materials.Silver}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.glass.geometry}
        material={materials.Glass}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.indicators.geometry}
        material={materials.Light_orange}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.main_lights.geometry}
        material={materials.Light_white}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rims.geometry}
        material={materials.Gray}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.solar_panel_1.geometry}
        material={materials.SB_black}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.solar_panel_2.geometry}
        material={materials.SB_gray}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tail_lights.geometry}
        material={materials.Orange}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.wheels.geometry}
        material={materials.Black}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.window_frame.geometry}
        material={materials.Black_glass}
        position={[0, -0.02, 0]}
        rotation={[-1.57, 0, -0.81]}
      />
    </group>
    </>
  )
}

useGLTF.preload('/cybertruck.gltf')
